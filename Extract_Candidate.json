{
  "name": "Give_resume",
  "nodes": [
    {
      "parameters": {
        "resource": "fileFolder",
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1sHSDjZYXV_Cx0BFnHZNSJGTPapXLAWGF",
            "mode": "list",
            "cachedResultName": "enginerring",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1sHSDjZYXV_Cx0BFnHZNSJGTPapXLAWGF"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2340,
        2380
      ],
      "id": "c771c90c-d8df-4bbe-a727-532c87bc6091",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2xP69XO97XNINVjw",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2600,
        2380
      ],
      "id": "f41901a7-bc34-4618-b9f3-f8ecd6c235a3",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "=data",
        "options": {
          "keepSource": "json"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3100,
        2380
      ],
      "id": "b6af02f8-fdf9-469c-842b-c9575ffacbf0",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        3620,
        2420
      ],
      "id": "1094af7a-601e-43e3-8131-d93368b819e8",
      "name": "Merge"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=CV:\n {{ $json.text }}",
        "messages": {
          "messageValues": [
            {
              "message": "=YOU ARE THE WORLD’S MOST ACCURATE AND EFFICIENT RESUME ANALYST AND SUMMARIZER, renowned for creating concise, insightful summaries and evaluating candidate-job alignment with exceptional precision.  You will be provided with:  A candidate’s resume: {{ $json.text }}  A job description: {{ $json.data }}  Your task is twofold:  1. Summarize the Resume into the following three sections: - **Educational Qualifications**: Include degrees, institutions, and graduation years. - **Job History**: Include job titles, companies, and employment dates, along with key responsibilities. - **Skill Set**: List technical, soft, and industry-specific skills.  2. Evaluate the Candidate’s Suitability for the Job: Compare the resume content to the job description and assess how well the candidate’s background aligns with the role. Assign a score from 1 to 10 based on the following scale:  - 1–3 (Weak Match): Lacks critical qualifications or experience. - 4–6 (Moderate Match): Some relevant experience but noticeable gaps. - 7–8 (Strong Match): Meets most criteria with relevant background. - 9–10 (Excellent Match): Perfect or exceptional fit for the role.\nYour output MUST follow this strict format exactly (without any markdown formatting like `**`, `###`, or extra lines):  Name of Person:   [Full name]  or [No name there]   if name was not etracted properly \nMail or any other contact info:   [Email address or other contact info]  Educational Qualifications:   - [Degree], [Institution], [Year]   - [Degree], [Institution], [Year]    Job History:   - [Job Title], [Company], [Dates]: [Key responsibilities or achievements]   - [Job Title], [Company], [Dates]: [Key responsibilities or achievements]    Skill Set:   [Skill 1], [Skill 2], [Skill 3], ...  Candidate Evaluation:   Score: [1–10]  "
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        3820,
        2580
      ],
      "id": "b05c2acb-a877-445e-a795-8c68405620c0",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "amazon.nova-micro-v1:0",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAwsBedrock",
      "typeVersion": 1,
      "position": [
        3760,
        2760
      ],
      "id": "399a52a2-f4cb-497e-95ec-1e6e191ecda0",
      "name": "AWS Bedrock Chat Model1",
      "credentials": {
        "aws": {
          "id": "8lDEqtAXxsv9FaAH",
          "name": "AWS account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3160,
        2720
      ],
      "id": "21b698b4-0d91-4860-98ef-8645b0e9d7c4",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2920,
        2120
      ],
      "id": "d2023d37-49e5-400b-a833-53669755dd9e",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3780,
        2340
      ],
      "id": "f88a31ce-5993-43aa-af6c-70901e1f3080",
      "name": "Wait",
      "webhookId": "a3f8ce6a-85bc-46ad-b6fb-45d17be2944b"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4",
          "mode": "list",
          "cachedResultName": "Prf1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4/edit#gid=0"
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3720,
        1920
      ],
      "id": "c6d67e65-f407-454a-b1a2-3096f30a1e88",
      "name": "Shortlist-CVs",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "KD5KX82L0zlN6HT5",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// This returns a single item with a number value\nreturn [\n  {\n    json: {\n      number: 42\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3260,
        1900
      ],
      "id": "381a149a-1d3a-46d9-bfd1-304b763a35dc",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (let i = 0; i < items.length; i++) {\n  const name = items[i].json.Candidate_Name || 'N/A';\n  const contact = items[i].json.Contact || 'N/A';\n  const score = items[i].json.Score || 'N/A';\n  const cv_id = items[i].json.CV_id || 'N/A';\n\n  results.push({\n    json: {\n      Candidate_Name: name,\n      Contact: contact,\n      Score: score,\n      CV_id: cv_id\n    }\n  });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3900,
        1760
      ],
      "id": "0f56f38e-1372-4d05-98a6-267a44e80892",
      "name": "Get_rows"
    },
    {
      "parameters": {
        "jsCode": "const output =$input.first().json.text; // This is the LLM response in the new format\nfunction extractSection(pattern, multiline = false) {\n  const regex = new RegExp(pattern, multiline ? \"ms\" : \"m\");\n  const match = output.match(regex);\n  return match ? match[1].trim() : \"\";\n}\n\n// Extract fields using clean patterns\nconst name = extractSection(/Name of Person:\\s*(.+)/);\nconst contact = extractSection(/Mail or any other contact info:\\s*(.+)/);\nconst education = extractSection(/Educational Qualifications:\\s*([\\s\\S]*?)Job History:/, true);\nconst jobHistory = extractSection(/Job History:\\s*([\\s\\S]*?)Skill Set:/, true);\nconst skillsRaw = extractSection(/Skill Set:\\s*(.+)/);\nconst skills = skillsRaw.split(\",\").map(skill => skill.trim());\nconst score = extractSection(/Score:\\s*(\\d+)/);\nconst cv_id =  $('Code').first().json.id\n// Return structured data\nreturn [\n  {\n    json: {\n      name,\n      contact,\n      education,\n      jobHistory,\n      skills,\n      score: parseInt(score),\n      cv_id\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4340,
        2460
      ],
      "id": "e2e70187-7f55-4e43-8318-585b234064f3",
      "name": "Extract_info _from_CVs"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1pgZEE6oiUUOWHhYkUQLCjaCB492LAUYM",
          "mode": "list",
          "cachedResultName": "job.txt",
          "cachedResultUrl": "https://drive.google.com/file/d/1pgZEE6oiUUOWHhYkUQLCjaCB492LAUYM/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2840,
        2580
      ],
      "id": "ccff2967-9e68-4c82-9cbf-abe6cd1aa2ea",
      "name": "Job_description",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2xP69XO97XNINVjw",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2920,
        2380
      ],
      "id": "b75640b7-9fe7-4a6b-9846-e11406ff2586",
      "name": "CVs",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2xP69XO97XNINVjw",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1jCF9Sk-7BrDXWPhDLXcrUmvCU2BwbrjSYR8dV5hjrtI",
          "mode": "list",
          "cachedResultName": "Profile",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jCF9Sk-7BrDXWPhDLXcrUmvCU2BwbrjSYR8dV5hjrtI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jCF9Sk-7BrDXWPhDLXcrUmvCU2BwbrjSYR8dV5hjrtI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Candidate_Name": "={{ $json.name }}",
            "Contact": "={{ $json.contact }}",
            "Education": "={{ $json.education }}",
            "Job_History": "={{ $json.jobHistory }}",
            "Skill": "={{ $json.skills }}",
            "Score": "={{ $json.score }}",
            "CV_id": "={{ $json.cv_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Candidate_Name",
              "displayName": "Candidate_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Contact",
              "displayName": "Contact",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Education",
              "displayName": "Education",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Skill",
              "displayName": "Skill",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job_History",
              "displayName": "Job_History",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CV_id",
              "displayName": "CV_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4540,
        2780
      ],
      "id": "98d2433b-2421-46b4-9b77-5f45bbb3c26c",
      "name": "CVs_append_with_score",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "KD5KX82L0zlN6HT5",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4cd032a3-7e40-4d4b-99a3-5d4b419e7de9",
              "leftValue": "={{ $json.Score }}",
              "rightValue": 7,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2460,
        1880
      ],
      "id": "051d8516-8c98-484b-ad92-bb14e2982f63",
      "name": "If_Score_greater_than_7"
    },
    {
      "parameters": {
        "jsCode": "const id = $input.first().json.id;\n\nreturn [\n  {\n    json: {\n      id: id\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3440,
        2280
      ],
      "id": "4c693cab-6f05-4298-b7b7-d8180b8ba8b0",
      "name": "Code"
    },
    {
      "parameters": {
        "path": "50c09319-b234-4661-a1a3-78f323ec5007",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2060,
        2400
      ],
      "id": "81d97cb8-8a07-44d5-aebb-e414bead11ab",
      "name": "Webhook",
      "webhookId": "50c09319-b234-4661-a1a3-78f323ec5007"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4",
          "mode": "list",
          "cachedResultName": "Prf1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sWFlwqwwrWlfqd4O4Ikdulz05OxEkWHm_sfAOowkLk4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Score": "={{ $('Loop Over Items1').item.json.Score }}",
            "Skill": "={{ $('Loop Over Items1').item.json.Skill }}",
            "Job_History": "={{ $('Loop Over Items1').item.json.Job_History }}",
            "Education": "={{ $('Loop Over Items1').item.json.Education }}",
            "Contact": "={{ $('Loop Over Items1').item.json.Contact }}",
            "Candidate_Name": "={{ $('Loop Over Items1').item.json.Candidate_Name }}",
            "CV_id": "={{ $('Loop Over Items1').item.json.CV_id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Candidate_Name",
              "displayName": "Candidate_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Contact",
              "displayName": "Contact",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Education",
              "displayName": "Education",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Job_History",
              "displayName": "Job_History",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Skill",
              "displayName": "Skill",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Score",
              "displayName": "Score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CV_id",
              "displayName": "CV_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3020,
        1640
      ],
      "id": "957ebe61-5971-4b82-a1ef-8915d4e3e4f0",
      "name": "Shortlist-Cv_append",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "KD5KX82L0zlN6HT5",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const output = [];\n\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i];\n\n  const name = item.json?.Candidate_Name || 'N/A';\n  const contact = item.json?.Contact || 'N/A';\n  const score = item.json?.Score || 'N/A';\n\n  let resumeLink = 'Not Available';\n\n  // Use Google Drive CV_id if available\n  if (item.json?.CV_id) {\n    resumeLink = `https://drive.google.com/file/d/${item.json.CV_id}/view`;\n  }\n  // Else fallback to base64 embedded link\n  else if (item.binary?.resume?.data) {\n    const base64Data = item.binary.resume.data;\n    const mimeType = item.binary.resume.mimeType || 'application/pdf';\n    resumeLink = `data:${mimeType};base64,${base64Data}`;\n  }\n\n  output.push({\n    Candidate_Name: name,\n    Contact: contact,\n    Score: score,\n    Resume_Link: resumeLink,\n  });\n}\n\nreturn [\n  {\n    json: {\n      candidates: output\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4100,
        1760
      ],
      "id": "dffdf3bd-be3e-4b67-a8eb-58357c0482c9",
      "name": "Fetching_CVs&Formating"
    }
  ],
  "pinData": {},
  "connections": {
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Job_description",
            "type": "main",
            "index": 0
          },
          {
            "node": "CVs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS Bedrock Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Extract_info _from_CVs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If_Score_greater_than_7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Shortlist-CVs": {
      "main": [
        [
          {
            "node": "Get_rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Shortlist-CVs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_rows": {
      "main": [
        [
          {
            "node": "Fetching_CVs&Formating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract_info _from_CVs": {
      "main": [
        [
          {
            "node": "CVs_append_with_score",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Job_description": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CVs": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CVs_append_with_score": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_Score_greater_than_7": {
      "main": [
        [
          {
            "node": "Shortlist-Cv_append",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Shortlist-Cv_append": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e6cbceb6-abe7-4d4d-a74a-15eea0ec3558",
  "meta": {
    "instanceId": "62184075674dd806bc5b9ae207cc93870d1c89f20f25d8e9aaa3bda1a913c7c8"
  },
  "id": "k0Xpmd0HUg6RXdlu",
  "tags": []
}